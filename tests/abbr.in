echo '# Test basic add and list of __abbr1' | tee /dev/stderr
abbr __abbr1 alpha beta gamma
abbr | grep __abbr1

echo '# Erasing one that doesn\'t exist should do nothing' | tee /dev/stderr
abbr --erase NOT_AN_ABBR
abbr | grep __abbr1

echo '# Adding existing __abbr1 should be idempotent' | tee /dev/stderr
abbr __abbr1 alpha beta gamma
abbr | grep __abbr1

echo '# Replacing __abbr1 definition' | tee /dev/stderr
abbr __abbr1 delta
abbr | grep __abbr1

echo '# __abbr1 -s and --show tests' | tee /dev/stderr
abbr -s | grep __abbr1
abbr --show | grep __abbr1

echo '# Test erasing __abbr1' | tee /dev/stderr
abbr -e __abbr1
abbr | grep __abbr1

echo '# Ensure we escape special characters on output' | tee /dev/stderr
abbr '~__abbr2' '$xyz'
abbr | grep __abbr2
abbr -e '~__abbr2'

echo '# Ensure we handle leading dashes in abbreviation names properly' | tee /dev/stderr
abbr -- '--__abbr3' 'xyz'
abbr | grep __abbr3
abbr -e -- '--__abbr3'

echo '# Test that an abbr word containing spaces is rejected' | tee /dev/stderr
abbr "a b c" "d e f"
abbr | grep 'a b c'

echo '# Test renaming' | tee /dev/stderr
abbr __abbr4 omega
abbr | grep __abbr5
abbr -r __abbr4 __abbr5
abbr | grep __abbr5
abbr -e __abbr5
abbr | grep __abbr4

echo '# Test renaming a nonexistent abbreviation' | tee /dev/stderr
abbr -r __abbr6 __abbr

echo '# Test renaming to a abbreviation with spaces' | tee /dev/stderr
abbr __abbr4 omega
abbr -r __abbr4 "g h i"
abbr -e __abbr4

echo '# Test renaming without arguments' | tee /dev/stderr
abbr __abbr7 omega
abbr -r __abbr7

echo '# Test renaming with too many arguments' | tee /dev/stderr
abbr __abbr8 omega
abbr -r __abbr8 __abbr9 __abbr10
abbr | grep __abbr8
abbr | grep __abbr9
abbr | grep __abbr10

echo '# Test renaming to existing abbreviation' | tee /dev/stderr
abbr __abbr11 omega11
abbr __abbr12 omega12
abbr -r __abbr11 __abbr12

true  # the last `abbr` command is expected to fail -- don't let that cause a test failure
